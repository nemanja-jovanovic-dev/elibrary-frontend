{
    "pipes": [],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-b627398398347c211ba5d2e73b7cd63f8e19502a8877c022695564a8a59579bd51ae1fe0137c1091dc3022c6aa2a41d65134e770c81170d4589dbc487996eed3",
            "file": "src/app/reducers/index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as userReducer from './app.reducer';\n\nexport interface AppState {\n    user: userReducer.State\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n    user: userReducer.reducer\n}\n\nexport const appStateSelector = createFeatureSelector<AppState>('user');\n\nexport const userSelector = createSelector(appStateSelector, (state: AppState) => state.user);\n\nexport const getUserInfo = createSelector(userSelector, userReducer.getUserInfo);\nexport const getToken = createSelector(userSelector, userReducer.getToken);\n",
            "properties": [
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "userReducer.State",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "LoginRequest",
            "id": "interface-LoginRequest-6304c6290c5764f895c549664ee4cfcf6a9a9d09fe681f7fabc06eb29b0256ddda3ea88614c7f9465b8ab5064d6c3f23a1400a79432d9bb16ea96fc2786dbc49",
            "file": "src/app/core/rest/login/model/login-request.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface LoginRequest {\r\n    email: string;\r\n    password: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RegisterForm",
            "id": "interface-RegisterForm-dabfc11b18a8bcf301704295fee19e6cc7034fc3350dd5825ba70a7a8cecb02ba3abe64a8810c1a5f7dd50d52c2f65844268aeaad9e5ea57aec6dbab8d31d384",
            "file": "src/app/modules/public/modules/register/components/register-form/register-form.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\ninterface RegisterForm {\n    name: FormControl<string | null>;\n    email: FormControl<string | null>;\n    password: FormControl<string | null>;\n}\n\n@Component({\n    selector: 'app-register-form',\n    templateUrl: './register-form.component.html',\n    styleUrls: ['./register-form.component.scss']\n})\nexport class RegisterFormComponent implements OnInit {\n\n    form!: FormGroup<RegisterForm>;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        this.form = new FormGroup({\n            'name': new FormControl('', Validators.required),\n            'email': new FormControl('', Validators.required),\n            'password': new FormControl('', Validators.required)\n        })\n    }\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-3e030b8abd8b0bc1e4a0fcafb42c525816ccd436dbc5dbb016d9174a973a54a713fe5c98587eb8387f90e1dffff7cef64c50e25fbe34a640c4c9d449b95090f6",
            "file": "src/app/reducers/app.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action, createReducer, createSelector, on } from '@ngrx/store';\r\nimport { userSelector } from '.';\r\nimport { UserDetailsModel } from '../core/rest/login/model/login-response.model';\r\nimport { getUserDetailsSuccess, login, loginFail, loginSuccess } from './app.actions';\r\n\r\nexport interface State {\r\n    username: string;\r\n    password: string;\r\n    authenticationMessage: string;\r\n    userInfo: UserDetailsModel | null;\r\n    token: string | null;\r\n}\r\n\r\nexport const initialAppState: State = {\r\n    username: '',\r\n    password: '',\r\n    authenticationMessage: '',\r\n    userInfo: null,\r\n    token: ''\r\n};\r\n\r\nexport const getUserInfo = (state: State) => state.userInfo;\r\nexport const getToken = (state: State) => state.token;\r\n\r\nexport const reducer = createReducer(\r\n    initialAppState as State,\r\n    on(login, (state) => ({\r\n        ...state\r\n    })),\r\n    on(loginSuccess, (state: State, {token}) => ({\r\n        ...state,\r\n        token: token\r\n    })),\r\n    on(loginFail, (state, { message }) => ({\r\n        ...state,\r\n        authenticationMessage: message\r\n    })),\r\n    on(getUserDetailsSuccess, (state: State, {userDetails}) => ({\r\n        ...state,\r\n        userInfo: userDetails\r\n    }))\r\n);\r\n\r\nexport function AppReducer(state: State, action: Action): State {\r\n    return reducer(state as State, action as Action);\r\n}\r\n",
            "properties": [
                {
                    "name": "authenticationMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "userInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserDetailsModel | null",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-7bbe4976824e9b193f070d65903f3d4f74e5d513f24e9f1094fafabf4267183eda1d8ca9c8fca622ec4fb29aa95fc87dcee7f763c310e9460ed8ca48aba0917e-1",
            "file": "src/app/modules/secured/store/secured.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Action, createReducer, on } from '@ngrx/store';\r\nimport * as fromActions from './secured.actions';\r\n\r\nexport interface State {}\r\n\r\nexport const initialState: State = {};\r\n\r\nconst featureReducer = createReducer(\r\n    initialState,\r\n    on(fromActions.Login, (state: State) => ({\r\n        ...state\r\n    }))\r\n);\r\n\r\nexport function reducer(state: State | undefined, action: Action) {\r\n    return featureReducer(state, action);\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "State-1"
        },
        {
            "name": "State",
            "id": "interface-State-fd9b90c38802f90ce8b9dc98fe5922406699cd96d3050e319fa87534ce069e7e16c937be586d0a672370c3b7968eda65c9caeb23acad7c3496773627a42e1b47-2",
            "file": "src/app/modules/public/login/store/login.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ComponentStore } from '@ngrx/component-store';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, exhaustMap, tap } from 'rxjs';\r\nimport { UserRestService } from 'src/app/core/rest/login/login-rest.service';\r\nimport { LoginRequest } from 'src/app/core/rest/login/model/login-request.model';\r\nimport { UserDetailsModel } from 'src/app/core/rest/login/model/login-response.model';\r\nimport { SECURED__DASHBOARD } from 'src/app/core/utils/route-service';\r\nimport { loginSuccess } from 'src/app/reducers/app.actions';\r\n\r\ninterface State {\r\n    loading: boolean;\r\n    token: string | null;\r\n}\r\n\r\nconst INITIAL_STATE: State = {\r\n    loading: false,\r\n    token: null\r\n};\r\n\r\n@Injectable()\r\nexport class LoginStore extends ComponentStore<State> {\r\n    token$: Observable<string | null> = this.select(\r\n        (state) => state.token\r\n    );\r\n\r\n    constructor(\r\n        private loginRestService: UserRestService,\r\n        private router: Router,\r\n        private store: Store<State>\r\n    ) {\r\n        super(INITIAL_STATE);\r\n    }\r\n\r\n    setCredentials = this.updater(\r\n        (state: State, token: string) => ({\r\n            ...state,\r\n            token\r\n        })\r\n    );\r\n\r\n    userLogin = this.effect((credentials$: Observable<LoginRequest>) =>\r\n        credentials$.pipe(\r\n            exhaustMap((credentials) => {\r\n                return this.loginRestService.login(credentials).pipe(\r\n                    tap((response: {token: string}) => {\r\n                        console.log(response);\r\n\r\n                        this.setCredentials(response.token);\r\n                        this.setUserInfoAndRedirect(response.token);\r\n                    })\r\n                );\r\n            })\r\n        )\r\n    );\r\n\r\n    private setUserInfoAndRedirect(token: string): void {\r\n        window.localStorage.setItem('token', token);\r\n        this.store.dispatch(loginSuccess({token: token}));\r\n        this.router.navigate([SECURED__DASHBOARD]);\r\n    }\r\n}\r\n",
            "properties": [
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "State-2"
        },
        {
            "name": "State",
            "id": "interface-State-a0924d31dd8f7b87b23f2ae7260dad68767d7c9f5dfd0f9c4b6b8b0d23109245f35da005a607a46e714863e62b3a9a301f7d5b32dcbb02e9f8785a10f9f5c6b4-3",
            "file": "src/app/modules/public/modules/register/store/register.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { ComponentStore } from \"@ngrx/component-store\";\r\n\r\ninterface State {\r\n    //form\r\n}\r\n\r\nconst INITIAL_STATE: State = {\r\n\r\n}\r\n\r\n@Injectable()\r\nexport class RegisterStore extends ComponentStore<State> {\r\n    constructor() {\r\n        super(INITIAL_STATE)\r\n    }\r\n\r\n    //register effect\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "State-3"
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "UserDetailsModel",
            "id": "interface-UserDetailsModel-ec40e5c17bb6602cdd257152cfc30393177edcb5dcfe65e125b43eee3e55c84373b1f6972be441a0d4b29676a54ed71d9d951ac3406f4a9e75f60714a9289180",
            "file": "src/app/core/rest/login/model/login-response.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserDetailsModel {\r\n    id: string;\r\n    name: string;\r\n    email: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "LoginEffect",
            "id": "injectable-LoginEffect-de16055c9060ad20bb51c3defa7a63e40907998340cebc803e6610dd9d53b49883fdc15b7061ebbbcd60d525938ad49d64cbb63d2ff27877c4b768865d7a639b",
            "file": "src/app/reducers/app.effects.ts",
            "properties": [
                {
                    "name": "getUserDetails$",
                    "defaultValue": "createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromActions.getUserDetails),\r\n            exhaustMap((action) =>\r\n                this.loginRestService.getUserDetails(action.token).pipe(\r\n                    map((data) => {\r\n                        return fromActions.getUserDetailsSuccess({\r\n                            userDetails: data\r\n                        });\r\n                    }),\r\n                    catchError((err) => {\r\n                        throw new Error(err);\r\n                    })\r\n                )\r\n            )\r\n        );\r\n    })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { catchError, exhaustMap, map } from 'rxjs';\r\nimport { UserRestService } from '../core/rest/login/login-rest.service';\r\nimport * as fromActions from './app.actions';\r\n\r\n@Injectable()\r\nexport class LoginEffect {\r\n    constructor(\r\n        private readonly actions$: Actions,\r\n        private readonly loginRestService: UserRestService\r\n    ) {}\r\n\r\n    getUserDetails$ = createEffect(() => {\r\n        return this.actions$.pipe(\r\n            ofType(fromActions.getUserDetails),\r\n            exhaustMap((action) =>\r\n                this.loginRestService.getUserDetails(action.token).pipe(\r\n                    map((data) => {\r\n                        return fromActions.getUserDetailsSuccess({\r\n                            userDetails: data\r\n                        });\r\n                    }),\r\n                    catchError((err) => {\r\n                        throw new Error(err);\r\n                    })\r\n                )\r\n            )\r\n        );\r\n    });\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loginRestService",
                        "type": "UserRestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loginRestService",
                        "type": "UserRestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LoginStore",
            "id": "injectable-LoginStore-fd9b90c38802f90ce8b9dc98fe5922406699cd96d3050e319fa87534ce069e7e16c937be586d0a672370c3b7968eda65c9caeb23acad7c3496773627a42e1b47",
            "file": "src/app/modules/public/login/store/login.store.ts",
            "properties": [
                {
                    "name": "setCredentials",
                    "defaultValue": "this.updater(\r\n        (state: State, token: string) => ({\r\n            ...state,\r\n            token\r\n        })\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "token$",
                    "defaultValue": "this.select(\r\n        (state) => state.token\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string | null>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "userLogin",
                    "defaultValue": "this.effect((credentials$: Observable<LoginRequest>) =>\r\n        credentials$.pipe(\r\n            exhaustMap((credentials) => {\r\n                return this.loginRestService.login(credentials).pipe(\r\n                    tap((response: {token: string}) => {\r\n                        console.log(response);\r\n\r\n                        this.setCredentials(response.token);\r\n                        this.setUserInfoAndRedirect(response.token);\r\n                    })\r\n                );\r\n            })\r\n        )\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methods": [
                {
                    "name": "setUserInfoAndRedirect",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ComponentStore } from '@ngrx/component-store';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable, exhaustMap, tap } from 'rxjs';\r\nimport { UserRestService } from 'src/app/core/rest/login/login-rest.service';\r\nimport { LoginRequest } from 'src/app/core/rest/login/model/login-request.model';\r\nimport { UserDetailsModel } from 'src/app/core/rest/login/model/login-response.model';\r\nimport { SECURED__DASHBOARD } from 'src/app/core/utils/route-service';\r\nimport { loginSuccess } from 'src/app/reducers/app.actions';\r\n\r\ninterface State {\r\n    loading: boolean;\r\n    token: string | null;\r\n}\r\n\r\nconst INITIAL_STATE: State = {\r\n    loading: false,\r\n    token: null\r\n};\r\n\r\n@Injectable()\r\nexport class LoginStore extends ComponentStore<State> {\r\n    token$: Observable<string | null> = this.select(\r\n        (state) => state.token\r\n    );\r\n\r\n    constructor(\r\n        private loginRestService: UserRestService,\r\n        private router: Router,\r\n        private store: Store<State>\r\n    ) {\r\n        super(INITIAL_STATE);\r\n    }\r\n\r\n    setCredentials = this.updater(\r\n        (state: State, token: string) => ({\r\n            ...state,\r\n            token\r\n        })\r\n    );\r\n\r\n    userLogin = this.effect((credentials$: Observable<LoginRequest>) =>\r\n        credentials$.pipe(\r\n            exhaustMap((credentials) => {\r\n                return this.loginRestService.login(credentials).pipe(\r\n                    tap((response: {token: string}) => {\r\n                        console.log(response);\r\n\r\n                        this.setCredentials(response.token);\r\n                        this.setUserInfoAndRedirect(response.token);\r\n                    })\r\n                );\r\n            })\r\n        )\r\n    );\r\n\r\n    private setUserInfoAndRedirect(token: string): void {\r\n        window.localStorage.setItem('token', token);\r\n        this.store.dispatch(loginSuccess({token: token}));\r\n        this.router.navigate([SECURED__DASHBOARD]);\r\n    }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loginRestService",
                        "type": "UserRestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<State>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "loginRestService",
                        "type": "UserRestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<State>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "ComponentStore",
            "type": "injectable"
        },
        {
            "name": "RegisterStore",
            "id": "injectable-RegisterStore-a0924d31dd8f7b87b23f2ae7260dad68767d7c9f5dfd0f9c4b6b8b0d23109245f35da005a607a46e714863e62b3a9a301f7d5b32dcbb02e9f8785a10f9f5c6b4",
            "file": "src/app/modules/public/modules/register/store/register.store.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { ComponentStore } from \"@ngrx/component-store\";\r\n\r\ninterface State {\r\n    //form\r\n}\r\n\r\nconst INITIAL_STATE: State = {\r\n\r\n}\r\n\r\n@Injectable()\r\nexport class RegisterStore extends ComponentStore<State> {\r\n    constructor() {\r\n        super(INITIAL_STATE)\r\n    }\r\n\r\n    //register effect\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "extends": "ComponentStore",
            "type": "injectable"
        },
        {
            "name": "UserRestService",
            "id": "injectable-UserRestService-944ee0b5022731cdd6a58510b0dc8431af10b3a8ac887b58fc30d6ee9fa9f253a15c97c8a661c49f3f5e42e834b5960fcdde8bb15371d5904c18e59f2b2d1874",
            "file": "src/app/core/rest/login/login-rest.service.ts",
            "properties": [
                {
                    "name": "controllerUrl",
                    "defaultValue": "`${environment.location}/api`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getUserDetails",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<UserDetailsModel>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "credentials",
                            "type": "LoginRequest",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<literal type>",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "credentials",
                            "type": "LoginRequest",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "register",
                    "args": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { LoginRequest } from './model/login-request.model';\nimport { UserDetailsModel } from './model/login-response.model';\n\n@Injectable()\nexport class UserRestService {\n\n    private controllerUrl = `${environment.location}/api`;\n\n    constructor(private httpClient: HttpClient) {}\n\n    login(credentials: LoginRequest): Observable<{token: string}> {\n        return this.httpClient.post<{token: string}>(`${this.controllerUrl}/auth/login`, credentials)\n    }\n\n    register(form: any): Observable<any> {\n        return this.httpClient.post<any>(`${this.controllerUrl}/auth/register`, form);\n    }\n\n    getUserDetails(token: string): Observable<UserDetailsModel> {\n        return this.httpClient.get<UserDetailsModel>(`${this.controllerUrl}/auth/${token}`);\n    }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "LoginGuard",
            "id": "injectable-LoginGuard-5cae8f913ec956b4037fcc2a5fa0d4a365bcd825ee6bc72e27609f4897cf3e4aa89d29b8a50ee0622ce803827b7e7c30e7935889a88928552ef823d59ee1ca99",
            "file": "src/app/core/guards/login.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/app/reducers';\nimport * as fromActions from '../../reducers/app.actions';\nimport { PUBLIC } from '../utils/route-service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n    constructor(private router: Router, private store: Store<AppState>) {}\n\n    canActivate():\n        | Observable<boolean | UrlTree>\n        | Promise<boolean | UrlTree>\n        | boolean\n        | UrlTree {\n        const token = window.localStorage.getItem('token');\n\n        if (!token) {\n            return this.router.navigate([PUBLIC]);\n        }\n\n        this.store.dispatch(fromActions.getUserDetails({ token: token }));\n        return true;\n    }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-2d4b814ddcc754c178a3d0460291d79303bcc15a80314240a39bb4683f19755bd00ec3b8b32e457ef08562c1b2f7eca32cab515b56e6ebfbd388afdd70ac7c54",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'elibrary-web-client'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'elibrary-web-client';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-5b73d2f391cf2f5856ea1156f65b5c3b5784f7db40d0dde1297e4f04c5c384056d9a19582a24933f794c871dac88ac3fae34edbdd025720274a0679e77214622-1",
            "file": "src/app/shared/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "cssClass",
                    "defaultValue": "'btn__primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clickEvent",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    selector: 'app-button',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n    @Input() label: string = '';\n    @Input() cssClass: string = 'btn__primary'\n    @Input() iconClass: string = '';\n    @Input() disabled: boolean = false;\n\n    @Output() clickEvent = new EventEmitter<void>();\n\n    constructor() {}\n\n    ngOnInit(): void {}\n\n    onClick(): void {\n        if (this.disabled) {\n            return;\n        }\n\n        this.clickEvent.emit();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'mixins';\r\n@import 'variables';\r\n\r\n.btn {\r\n    @include btn-base-style;\r\n\r\n    &__primary {\r\n        color: $cream-font;\r\n        background-color: $green;\r\n    }\r\n\r\n    &__secondary {\r\n        border: 1px solid $green;\r\n        color: $green;\r\n    }\r\n\r\n    &__tertiary {\r\n        color: $green-dark;\r\n        text-transform: capitalize;\r\n        font-weight: 600;\r\n        background: none;\r\n    }\r\n}\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button class=\"btn {{cssClass}}\"\n        [tabIndex]=\"disabled ? -1 : 1\"\n        [disabled]=\"disabled\"\n        (click)=\"onClick()\">\n    {{ label }}\n</button>\n"
        },
        {
            "name": "ContainerComponent",
            "id": "component-ContainerComponent-c96620822c67095a65b10a9f7ca5a6b50e57e7a7fe3c2beabd0c42bad77f28ac890b699c592d67b90f62f4125086c3b55f68be1381380c50bc41bb3a280bfbb0",
            "file": "src/app/modules/secured/container/container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-container",
            "styleUrls": [
                "./container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-container',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss']\n})\nexport class ContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>container works!</p>\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "DashboardContainerComponent",
            "id": "component-DashboardContainerComponent-1b211dc5b5f65e27dbb28b6bee6529313c69f433b9a3687f155a8575500f37ccdd006ee73029407ef21fcd3ac2b1309b58176837fc1fab8f55588b9c35411e62",
            "file": "src/app/modules/secured/modules/dashboard/dashboard-container/dashboard-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard-container",
            "styleUrls": [
                "./dashboard-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "userInfo$",
                    "defaultValue": "this.store.select(getUserInfo)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<UserDetailsModel | null>",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { UserDetailsModel } from 'src/app/core/rest/login/model/login-response.model';\nimport { AppState, getToken, getUserInfo } from 'src/app/reducers';\n\n@Component({\n    selector: 'app-dashboard-container',\n    templateUrl: './dashboard-container.component.html',\n    styleUrls: ['./dashboard-container.component.scss']\n})\nexport class DashboardContainerComponent implements OnInit {\n\n    userInfo$: Observable<UserDetailsModel | null> = this.store.select(getUserInfo);\n\n    constructor(private store: Store<AppState>) {}\n\n    ngOnInit(): void {\n        this.userInfo$.subscribe(value => console.log(value));\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dashboard-container works!</p>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-ae474deb3b483bbb7ac5ebbab9e147456d9c9315a419010579198e17da102a12643c0eaffabfd2d119bedd316708991dc2c3f9935b931d29a06762fdcf26e446",
            "file": "src/app/shared/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: InputComponent, multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-input",
            "styleUrls": [
                "./input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "destroy$",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector: 'app-input',\n    templateUrl: './input.component.html',\n    styleUrls: ['./input.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: InputComponent,\n            multi: true\n        }\n    ]\n})\nexport class InputComponent implements ControlValueAccessor, OnInit, OnDestroy {\n\n    @Input() label: string = '';\n    @Input() placeholder: string = '';\n    @Input() type = 'text';\n\n    destroy$: Subject<boolean> = new Subject<boolean>();\n\n    formControl = new FormControl('');\n\n    value = '';\n    disabled = false;\n\n    onTouched!: () => void;\n    onChange: (value: any) => void = () => {};\n\n    ngOnInit(): void {\n        this.formControl.valueChanges\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(value => {\n            this.setValue(value);\n        })\n    }\n\n    ngOnDestroy(): void {\n        this.destroy$.next(true);\n        this.destroy$.unsubscribe();\n    }\n\n    writeValue(value: any): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: any): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    private setValue(value: any) {\n        if (this.disabled) {\n            return;\n        }\n\n        this.writeValue(value);\n        this.onChange(value);\n        this.onTouched();\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./input.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<mat-form-field class=\"example-full-width\"\n                appearance=\"fill\">\n    <mat-label>{{ label }}</mat-label>\n    <input matInput\n           [type]=\"type\"\n           [placeholder]=\"placeholder\"\n           [formControl]=\"formControl\">\n    <!-- <mat-hint>Errors appear instantly!</mat-hint> -->\n    <!-- <mat-error *ngIf=\"formControl.hasError('isEmail') && !formControl.hasError('required')\">\n        Please enter a valid email address\n    </mat-error> -->\n    <mat-error>\n        <code>{{ formControl.hasError | json }}</code>\n        <ng-content></ng-content>\n    </mat-error>\n</mat-form-field>\n"
        },
        {
            "name": "LoginContainerComponent",
            "id": "component-LoginContainerComponent-9f6e63b346fc3a956cc21911368e5a029ee5cf3b68b4c8c7e72a0a65214e312521c4185f4bc20e426e2a7f8dbe841102f3e2e115867ca337a2a8003536db3c9c",
            "file": "src/app/modules/public/login/login-container/login-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "LoginStore"
                }
            ],
            "selector": "app-login-container",
            "styleUrls": [
                "./login-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ELIBRARY_LOGO",
                    "defaultValue": "ELIBRARY_LOGO",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "HOMEPAGE_COVER",
                    "defaultValue": "HOMEPAGE_COVER",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSignIn",
                    "args": [
                        {
                            "name": "loginFormValue",
                            "type": "LoginFormValue",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "loginFormValue",
                            "type": "LoginFormValue",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { LoginRequest } from 'src/app/core/rest/login/model/login-request.model';\nimport { ELIBRARY_LOGO, HOMEPAGE_COVER } from 'src/app/shared/utils/image-routes.util';\nimport { LoginFormValue } from '../components/login-form/login-form.component';\nimport { LoginStore } from '../store/login.store';\n\n@Component({\n    selector: 'app-login-container',\n    templateUrl: './login-container.component.html',\n    styleUrls: ['./login-container.component.scss'],\n    providers: [LoginStore]\n})\nexport class LoginContainerComponent implements OnInit {\n\n    HOMEPAGE_COVER = HOMEPAGE_COVER;\n    ELIBRARY_LOGO = ELIBRARY_LOGO;\n\n    constructor(private store: LoginStore) {}\n\n    ngOnInit(): void {}\n\n    onSignIn(loginFormValue: LoginFormValue): void {\n        const credentials: LoginRequest = {\n            email: loginFormValue.email as string,\n            password: loginFormValue.password as string\n        }\n\n        this.store.userLogin(credentials);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'variables';\r\n@import 'functions';\r\n@import 'mixins';\r\n\r\n.login {\r\n    display: flex;\r\n    height: 100vh;\r\n\r\n    &__cover {\r\n        display: none;\r\n\r\n        @include breakpoint('tablet') {\r\n            width: 50%;\r\n            height: 100%;\r\n            display: flex;\r\n            align-items: center;\r\n            padding: rem(40px);\r\n            background-color: $green-light-background;\r\n        }\r\n\r\n        @include breakpoint('tablet-wide') {\r\n            width: 60%;\r\n        }\r\n    }\r\n\r\n    &__wrapper {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    &__message {\r\n        color: $green-dark;\r\n        width: 70%;\r\n        margin-left: 10%;\r\n\r\n        @include breakpoint('tablet-wide') {\r\n            width: 55%;\r\n        }\r\n    }\r\n\r\n    &__cover-image {\r\n        height: rem(320px);\r\n        margin-left: 20%;\r\n        margin-top: rem(20px);\r\n    }\r\n\r\n    &__credentials {\r\n        width: 100%;\r\n\r\n        @include breakpoint(\"tablet\") {\r\n            width: 50%;\r\n        }\r\n\r\n        @include breakpoint('tablet-wide') {\r\n            width: 40%;\r\n        }\r\n    }\r\n\r\n    &__credentials-wrapper {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        height: 100%;\r\n    }\r\n\r\n    &__logo {\r\n        height: rem(60px);\r\n        width: auto;\r\n        margin-bottom: rem(40px);\r\n    }\r\n}\r\n",
                    "styleUrl": "./login-container.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "LoginStore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "LoginStore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"login\">\n    <section class=\"login__cover\">\n        <div class=\"login__wrapper\">\n            <h4 class=\"login__message\">\n                Reading is essential for those who seek to rise above the ordinary. Join eLibrary today.\n            </h4>\n            <img class=\"login__cover-image\"\n                 alt=\"Girl working from home\"\n                 [src]=\"HOMEPAGE_COVER\">\n        </div>\n    </section>\n    <section class=\"login__credentials\">\n        <div class=\"login__credentials-wrapper\">\n            <img alt=\"Elibrary logo\"\n                 class=\"login__logo\"\n                 [src]=\"ELIBRARY_LOGO\">\n            <app-login-form (singnInEvent)=\"onSignIn($event)\">\n            </app-login-form>\n        </div>\n    </section>\n</div>\n"
        },
        {
            "name": "LoginFormComponent",
            "id": "component-LoginFormComponent-eb0384d97686c73286820623157acab53618f59a673b5c16a81459e27634eee551c7e0dd36505d27f16d56859be5b3961a72e4ec744d53e7ba0871156e68a793",
            "file": "src/app/modules/public/login/components/login-form/login-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login-form",
            "styleUrls": [
                "./login-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "singnInEvent",
                    "defaultValue": "new EventEmitter<LoginFormValue>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup<Login>",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSignIn",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "register",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { REGISTER } from 'src/app/core/utils/route-service';\nimport { emailValidator } from 'src/app/core/validators/form.validator';\n\ntype Login = {\n    email: FormControl<string | null>;\n    password: FormControl<string | null>;\n};\n\nexport type LoginFormValue = Partial<{\n    email: string | null;\n    password: string | null;\n}>;\n\n@Component({\n    selector: 'app-login-form',\n    templateUrl: './login-form.component.html',\n    styleUrls: ['./login-form.component.scss']\n})\nexport class LoginFormComponent implements OnInit {\n    @Output() singnInEvent = new EventEmitter<LoginFormValue>();\n\n    form!: FormGroup<Login>;\n\n    constructor(private router: Router) {}\n\n    ngOnInit(): void {\n        this.form = new FormGroup<Login>({\n            email: new FormControl<string>('', [\n                Validators.required,\n                emailValidator()\n            ]),\n            password: new FormControl<string>('', [\n                Validators.required,\n                Validators.minLength(6)\n            ])\n        });\n    }\n\n    onSignIn(): void {\n        this.singnInEvent.emit(this.form.value);\n    }\n\n    register(): void {\n        this.router.navigate([REGISTER]);\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'functions';\r\n\r\n:host {\r\n    width: 100%;\r\n}\r\n\r\n.form {\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &__input-wrapper {\r\n        width: 60%;\r\n    }\r\n\r\n    &__submit {\r\n        margin-top: rem(20px);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n    }\r\n\r\n    &__register-btn {\r\n        margin-top: rem(10px);\r\n    }\r\n\r\n    &__forgot-password {\r\n        margin-top: rem(40px);\r\n        color: $black;\r\n\r\n        &-link {\r\n            color: $green-dark;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./login-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"form\">\n    <form class=\"form__input-wrapper\"\n          [formGroup]=\"form\">\n        <div class=\"form__input\">\n            <app-input [label]=\"'Email'\"\n                       [type]=\"'email'\"\n                       [formControlName]=\"'email'\"\n                       [placeholder]=\"'example@mail.com'\">\n                <p error-message>\n                    <span *ngIf=\"form.invalid\">\n                        This field is required\n                    </span>\n                </p>\n            </app-input>\n        </div>\n\n        <div class=\"form__input\">\n            <app-input [label]=\"'Password'\"\n                       [placeholder]=\"'*******'\"\n                       [type]=\"'password'\"\n                       [formControlName]=\"'password'\">\n            </app-input>\n        </div>\n\n        <div class=\"form__submit\">\n            <div class=\"form__submit-btn\">\n                <app-button [label]=\"'Sign in'\"\n                            [cssClass]=\"'btn__primary'\"\n                            [disabled]=\"form.invalid\"\n                            (clickEvent)=\"onSignIn()\">\n                </app-button>\n            </div>\n\n            <div class=\"form__register-btn\">\n                <app-button [label]=\"'Register'\"\n                            [cssClass]=\"'btn__tertiary'\"\n                            (clickEvent)=\"register()\">\n                </app-button>\n            </div>\n\n            <div class=\"form__forgot-password\">\n                <p>If you fogot your password click\n                    <a href=\"#\"\n                       class=\"form__forgot-password-link\">\n                        here\n                    </a>\n                </p>\n            </div>\n        </div>\n    </form>\n</div>\n"
        },
        {
            "name": "NotFoundComponent",
            "id": "component-NotFoundComponent-69bdd9bc319bd40db8062b1c419045b5eddc9decb626f245870a9c11bfd00a2bcd502f37dcf1f094b855bbb9488a740f9b4f6b54a648484fe69c331fe1c6afca",
            "file": "src/app/shared/not-found/not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-not-found",
            "styleUrls": [
                "./not-found.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./not-found.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>not-found works!</p>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RegisterContainerComponent",
            "id": "component-RegisterContainerComponent-f48eb098d2baf9f72bd3ff0faaf8ff5daeb29d753803680d3758d7ab1b68ca48de172289a1a947e9fb202298f4591b3b52ec91276b3408458e241961a56bd158",
            "file": "src/app/modules/public/modules/register/container/register-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register-container",
            "styleUrls": [
                "./register-container.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "ELIBRARY_LOGO",
                    "defaultValue": "ELIBRARY_LOGO",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "REGISTER_COVER",
                    "defaultValue": "REGISTER_COVER",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onBack",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRegister",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {\n    ELIBRARY_LOGO,\n    REGISTER_COVER\n} from 'src/app/shared/utils/image-routes.util';\n\n@Component({\n    selector: 'app-register-container',\n    templateUrl: './register-container.component.html',\n    styleUrls: ['./register-container.component.scss']\n})\nexport class RegisterContainerComponent {\n    readonly ELIBRARY_LOGO = ELIBRARY_LOGO;\n    readonly REGISTER_COVER = REGISTER_COVER;\n\n    onRegister(): void {\n        throw new Error('Method not implemented.');\n    }\n\n    onBack(): void {\n        throw new Error('Method not implemented.');\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import 'variables';\r\n@import 'functions';\r\n@import 'mixins';\r\n\r\n.register {\r\n    height: 100vh;\r\n    width: 100vw;\r\n    display: flex;\r\n\r\n    &__cover-container {\r\n        display: none;\r\n\r\n        @include breakpoint(desktop) {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 40%;\r\n            background-color: $green-light-background;\r\n        }\r\n    }\r\n\r\n    &__cover {\r\n        height: 80%;\r\n        width: 100%;\r\n        position: relative;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    &__logo {\r\n        width: 30%;\r\n        height: auto;\r\n    }\r\n\r\n    &__cover-image {\r\n        width: 80%;\r\n        height: auto;\r\n        position: absolute;\r\n        bottom: 0;\r\n        right: rem(-40px);\r\n    }\r\n\r\n    &__form-wrapper {\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        @include breakpoint(desktop) {\r\n            width: 60%;\r\n        }\r\n    }\r\n\r\n    &__form {\r\n        width: 60%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    &__title {\r\n        margin-bottom: rem(80px);\r\n        color: $green-dark;\r\n    }\r\n\r\n    &__btn {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        &--submit {\r\n            margin-top: rem(40px);\r\n        }\r\n\r\n        &--back {\r\n            margin-top: rem(10px);\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./register-container.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"register\">\n    <section class=\"register__cover-container\">\n        <div class=\"register__cover\">\n            <img alt=\"Elibrary logo\"\n                 class=\"register__logo\"\n                 [src]=\"ELIBRARY_LOGO\">\n\n            <img alt=\"Girl sitting\"\n                 class=\"register__cover-image\"\n                 [src]=\"REGISTER_COVER\">\n        </div>\n    </section>\n\n    <section class=\"register__form-wrapper\">\n        <div class=\"register__form\">\n            <h3 class=\"register__title\">Register</h3>\n\n            <app-register-form></app-register-form>\n\n            <div class=\"register__btn register__btn--submit\">\n                <app-button [label]=\"'Register'\"\n                            [cssClass]=\"'btn__primary'\"\n                            (clickEvent)=\"onRegister()\">\n                </app-button>\n            </div>\n\n            <div class=\"register__btn register__btn--back\">\n                <app-button [label]=\"'Back'\"\n                            [cssClass]=\"'btn__tertiary'\"\n                            (clickEvent)=\"onBack()\">\n                </app-button>\n            </div>\n        </div>\n    </section>\n</div>\n"
        },
        {
            "name": "RegisterFormComponent",
            "id": "component-RegisterFormComponent-dabfc11b18a8bcf301704295fee19e6cc7034fc3350dd5825ba70a7a8cecb02ba3abe64a8810c1a5f7dd50d52c2f65844268aeaad9e5ea57aec6dbab8d31d384",
            "file": "src/app/modules/public/modules/register/components/register-form/register-form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register-form",
            "styleUrls": [
                "./register-form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register-form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup<RegisterForm>",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\ninterface RegisterForm {\n    name: FormControl<string | null>;\n    email: FormControl<string | null>;\n    password: FormControl<string | null>;\n}\n\n@Component({\n    selector: 'app-register-form',\n    templateUrl: './register-form.component.html',\n    styleUrls: ['./register-form.component.scss']\n})\nexport class RegisterFormComponent implements OnInit {\n\n    form!: FormGroup<RegisterForm>;\n\n    constructor() {}\n\n    ngOnInit(): void {\n        this.form = new FormGroup({\n            'name': new FormControl('', Validators.required),\n            'email': new FormControl('', Validators.required),\n            'password': new FormControl('', Validators.required)\n        })\n    }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./register-form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form class=\"form\"\n      [formGroup]=\"form\">\n    <app-input [label]=\"'Name'\"\n               [type]=\"'text'\"\n               [formControlName]=\"'name'\"\n               [placeholder]=\"'John Doe'\">\n        <p error-message>\n            <span *ngIf=\"form.invalid\">\n                This field is required\n            </span>\n        </p>\n    </app-input>\n\n    <app-input [label]=\"'Email'\"\n               [type]=\"'email'\"\n               [formControlName]=\"'email'\"\n               [placeholder]=\"'johndoe@company.com'\">\n        <p error-message>\n            <span *ngIf=\"form.invalid\">\n                This field is required\n            </span>\n        </p>\n    </app-input>\n\n    <app-input [label]=\"'Password'\"\n               [type]=\"'password'\"\n               [formControlName]=\"'password'\"\n               [placeholder]=\"'********'\">\n        <p error-message>\n            <span *ngIf=\"form.invalid\">\n                This field is required\n            </span>\n        </p>\n    </app-input>\n</form>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-224c253c7236648daff59caecd92591a02d131402fdadd26956608282fa58781a275683e2b47ce3cfc7dfaa91678c7c4eafe448b27461a52c5b4db9ab4f40334",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { META_REDUCERS, StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { RestModule } from './core/rest/rest.module';\n\nimport { reducers } from './reducers';\n\n@NgModule({\n    declarations: [AppComponent, NotFoundComponent],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        StoreDevtoolsModule.instrument({\n            maxAge: 25,\n            logOnly: environment.production\n        }),\n        EffectsModule.forRoot([]),\n        StoreModule.forRoot({}),\n        !environment.production ? StoreDevtoolsModule.instrument() : [],\n        RestModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "NotFoundComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "!environment"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "RestModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-44d57d5da9ddff5d667d34a356381ed5e8a82aac4bf28da84e0fb80b5331d7ddd5b817e2870b694d0b893cefa0766ebc79b5e927d5209443149b9ffd180cbe8d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginGuard } from './core/guards/login.guard';\nimport { NotFoundComponent } from './shared/not-found/not-found.component';\n\nconst routes: Routes = [\n\t{ path: '', pathMatch: 'full', redirectTo: 'public' },\n\t{\n\t\tpath: 'public',\n\t\tloadChildren: () =>\n\t\t\t\"import('./modules/public/public.module').then((m) => m.PublicModule)\"\n\t},\n    {\n\t\tpath: 'secured',\n        canActivate: [LoginGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./modules/secured/secured.module').then((m) => m.SecuredModule)\"\n\t},\n    {\n        path: '**',\n        component: NotFoundComponent\n    }\n];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "id": "module-DashboardModule-98a06c30aae9983ff9c838b9fe73867e897364a116fa5bc021d9c9a8a87aecbc8bd4af56255415be6da5bcbc138f332a3de15d46cd76c9b658ebc9bc0e4ef73c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/secured/modules/dashboard/dashboard.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardContainerComponent } from './dashboard-container/dashboard-container.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [{ path: '', component: DashboardContainerComponent }];\n\n@NgModule({\n    declarations: [DashboardContainerComponent],\n    imports: [CommonModule, RouterModule.forChild(routes)]\n})\nexport class DashboardModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DashboardContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LoginModule",
            "id": "module-LoginModule-12e437c73728c2e3e88236d9b105d60f0edd971f430dbf4966565a57947db0aadba481019a12c125f734f9149ad8a31e3ea1021a4075fe3b4ee4d56d28f9e712",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/public/login/login.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginContainerComponent } from './login-container/login-container.component';\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginContainerComponent\n    }\n];\n\n@NgModule({\n    declarations: [LoginFormComponent, LoginContainerComponent],\n    imports: [CommonModule, RouterModule.forChild(routes), SharedModule]\n})\nexport class LoginModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LoginContainerComponent"
                        },
                        {
                            "name": "LoginFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MaterialModule",
            "id": "module-MaterialModule-6e3f49a88b9683bf902b7ebd6d43a6b6e8a8185d726f826490d8f9a7ee09dee8e68a259a2ff9c7d34d178f17e1579faa75a0c3ba9ba36d44df6a47135ab49974",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/material/material.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkMenuModule} from '@angular/cdk/menu';\nimport {DialogModule} from '@angular/cdk/dialog';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkAccordionModule,\n    ClipboardModule,\n    CdkMenuModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    DialogModule,\n  ]\n})\nexport class MaterialModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PublicModule",
            "id": "module-PublicModule-5dcb84d54394b21961ef8b09b420951a7c15584e30aa2fac2ebf1373304e767cb0102c50112c681c3b0cd4d49edc3aa7e4eb3c98fb1a2ab79ab75d93d03e9008",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/public/public.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport { reducers } from 'src/app/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { LoginEffect } from 'src/app/reducers/app.effects';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\n    {\n        path: 'login',\n        loadChildren: () =>\n            \"import('./login/login.module').then((m) => m.LoginModule)\"\n    },\n    {\n        path: 'register',\n        loadChildren: () =>\n            \"import('./modules/register/register.module').then((m) => m.RegisterModule)\"\n    }\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        StoreModule.forFeature('user', reducers),\n        EffectsModule.forFeature([LoginEffect])\n    ]\n})\nexport class PublicModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RegisterModule",
            "id": "module-RegisterModule-a063fa401f82ff678aa2df15b4f31072646806cd41af8168b5af8baae31a43f231db63d435b6d66878ec6b928821f848c2481100080f1e69785c62e0de016de8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/public/modules/register/register.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegisterContainerComponent } from './container/register-container.component';\r\nimport { RegisterFormComponent } from './components/register-form/register-form.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nconst routes: Routes = [{ path: '', component: RegisterContainerComponent }];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes), SharedModule],\r\n    exports: [],\r\n    declarations: [RegisterContainerComponent, RegisterFormComponent],\r\n    providers: []\r\n})\r\nexport class RegisterModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RegisterContainerComponent"
                        },
                        {
                            "name": "RegisterFormComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RestModule",
            "id": "module-RestModule-9fe33e6a82761fcf72da31bb0843a70286de7ade08e3ed01fac13d25ded6564696521bc54b552a1596aeb588b6037b4dc35226e34c834cf5b0e43e3663f46d66",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core/rest/rest.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { UserRestService } from './login/login-rest.service';\n\nconst PROVIDERS = [UserRestService];\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, HttpClientModule],\n    providers: [...PROVIDERS]\n})\nexport class RestModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "UserRestService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SecuredModule",
            "id": "module-SecuredModule-24c4e76e7ddd0d5fd2288617adacce268ed094b23c8d70bfb919086178f86b23f46233efffe48813c115697ba802ba12b569804fd6f45d7430bbc5093c80b7d8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/modules/secured/secured.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ContainerComponent } from './container/container.component';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ContainerComponent,\n        children: [\n            { path: '', redirectTo: 'dashboard', pathMatch: 'full' },\n            {\n                path: 'dashboard',\n                loadChildren: () =>\n                    \"import('./modules/dashboard/dashboard.module').then(\\\n                        (m) => m.DashboardModule\\\n                    )\"\n            }\n        ]\n    }\n];\n\n@NgModule({\n    declarations: [ContainerComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n    ]\n})\nexport class SecuredModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-8cd14f989fe322d77be5e28bcf7ee63739257dd7c927a2edb560021e6ff64f6e5511d5ab324c4deb69831979763d2ce321eb48b237bbfad24669555d27f5ac8d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InputComponent } from './input/input.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../core/material/material.module';\nimport { ButtonComponent } from './button/button.component';\n\nconst MODULES_TO_IMPORT = [\n    CommonModule,\n    MatInputModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule\n];\n\nconst COMPONENTS_TO_EXPORT = [\n    InputComponent,\n    ButtonComponent,\n]\n\n@NgModule({\n    declarations: [...COMPONENTS_TO_EXPORT],\n    imports: [...MODULES_TO_IMPORT],\n    exports: [...COMPONENTS_TO_EXPORT, ...MODULES_TO_IMPORT]\n})\nexport class SharedModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "InputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "InputComponent"
                        },
                        {
                            "name": "MaterialModule"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "appStateSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<AppState>('user')"
            },
            {
                "name": "Base",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "COMPONENTS_TO_EXPORT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    InputComponent,\n    ButtonComponent,\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "ELIBRARY_LOGO",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/image-routes.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "IMAGE_ROOT_PATH + 'logo.svg'"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n    production: false,\n    location: 'http://localhost:3000',\n}"
            },
            {
                "name": "featureReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/secured/store/secured.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialState,\r\n    on(fromActions.Login, (state: State) => ({\r\n        ...state\r\n    }))\r\n)"
            },
            {
                "name": "getToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: State) => state.token"
            },
            {
                "name": "getToken",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(userSelector, userReducer.getToken)"
            },
            {
                "name": "getUserDetails",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[loginModule] get user details',\r\n    props<{token: string}>()\r\n)"
            },
            {
                "name": "getUserDetailsSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[loginModule] get user details success',\r\n    props<{userDetails: UserDetailsModel}>()\r\n)"
            },
            {
                "name": "getUserInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: State) => state.userInfo"
            },
            {
                "name": "getUserInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(userSelector, userReducer.getUserInfo)"
            },
            {
                "name": "HOMEPAGE_COVER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/image-routes.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "IMAGE_ROOT_PATH + 'cover.svg'"
            },
            {
                "name": "IMAGE_ROOT_PATH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/image-routes.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'assets/images/'"
            },
            {
                "name": "INITIAL_STATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/public/login/store/login.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{\r\n    loading: false,\r\n    token: null\r\n}"
            },
            {
                "name": "INITIAL_STATE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/public/modules/register/store/register.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{\r\n\r\n}"
            },
            {
                "name": "initialAppState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{\r\n    username: '',\r\n    password: '',\r\n    authenticationMessage: '',\r\n    userInfo: null,\r\n    token: ''\r\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/secured/store/secured.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[loginModule] log user Action',\r\n    props<{ username: string; password: string }>()\r\n)"
            },
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/modules/secured/store/secured.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Login] Login')"
            },
            {
                "name": "loginFail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[loginModule] log user Fail Action',\r\n    props<{ message: string }>()\r\n)"
            },
            {
                "name": "loginSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\r\n    '[loginModule] log user Success Action',\r\n    props<{token: string}>()\r\n)"
            },
            {
                "name": "MODULES_TO_IMPORT",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n    CommonModule,\n    MatInputModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PROVIDERS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/rest/rest.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[UserRestService]"
            },
            {
                "name": "PUBLIC",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/utils/route-service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'/public'"
            },
            {
                "name": "reducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\r\n    initialAppState as State,\r\n    on(login, (state) => ({\r\n        ...state\r\n    })),\r\n    on(loginSuccess, (state: State, {token}) => ({\r\n        ...state,\r\n        token: token\r\n    })),\r\n    on(loginFail, (state, { message }) => ({\r\n        ...state,\r\n        authenticationMessage: message\r\n    })),\r\n    on(getUserDetailsSuccess, (state: State, {userDetails}) => ({\r\n        ...state,\r\n        userInfo: userDetails\r\n    }))\r\n)"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<AppState>",
                "defaultValue": "{\n    user: userReducer.reducer\n}"
            },
            {
                "name": "REGISTER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/utils/route-service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "PUBLIC + '/register'"
            },
            {
                "name": "REGISTER_COVER",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/utils/image-routes.util.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "IMAGE_ROOT_PATH + 'cover-register.svg'"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SECURED",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/utils/route-service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'/secured'"
            },
            {
                "name": "SECURED__DASHBOARD",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/utils/route-service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`${SECURED}/dashboard`"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/input/stories/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<InputComponent>",
                "defaultValue": "() => ({\r\n    component: InputComponent,\r\n    template: `<app-input></app-input>`\r\n})"
            },
            {
                "name": "userSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/reducers/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(appStateSelector, (state: AppState) => state.user)"
            }
        ],
        "functions": [
            {
                "name": "AppReducer",
                "file": "src/app/reducers/app.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "State",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "State",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "State",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "emailValidator",
                "file": "src/app/core/validators/form.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "ValidatorFn"
            },
            {
                "name": "reducer",
                "file": "src/app/modules/secured/store/secured.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "state",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "type": "Action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "Login",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/modules/public/login/components/login-form/login-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "LoginFormValue",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<literal type>",
                "file": "src/app/modules/public/login/components/login-form/login-form.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/reducers/index.ts": [
                {
                    "name": "appStateSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<AppState>('user')"
                },
                {
                    "name": "getToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(userSelector, userReducer.getToken)"
                },
                {
                    "name": "getUserInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(userSelector, userReducer.getUserInfo)"
                },
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<AppState>",
                    "defaultValue": "{\n    user: userReducer.reducer\n}"
                },
                {
                    "name": "userSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(appStateSelector, (state: AppState) => state.user)"
                }
            ],
            "src/app/shared/input/stories/input.stories.ts": [
                {
                    "name": "Base",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/input/stories/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<InputComponent>",
                    "defaultValue": "() => ({\r\n    component: InputComponent,\r\n    template: `<app-input></app-input>`\r\n})"
                }
            ],
            "src/app/shared/shared.module.ts": [
                {
                    "name": "COMPONENTS_TO_EXPORT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    InputComponent,\n    ButtonComponent,\n]"
                },
                {
                    "name": "MODULES_TO_IMPORT",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n    CommonModule,\n    MatInputModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule\n]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/shared/utils/image-routes.util.ts": [
                {
                    "name": "ELIBRARY_LOGO",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/image-routes.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "IMAGE_ROOT_PATH + 'logo.svg'"
                },
                {
                    "name": "HOMEPAGE_COVER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/image-routes.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "IMAGE_ROOT_PATH + 'cover.svg'"
                },
                {
                    "name": "IMAGE_ROOT_PATH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/image-routes.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'assets/images/'"
                },
                {
                    "name": "REGISTER_COVER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/utils/image-routes.util.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "IMAGE_ROOT_PATH + 'cover-register.svg'"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n    production: false,\n    location: 'http://localhost:3000',\n}"
                }
            ],
            "src/app/modules/secured/store/secured.reducer.ts": [
                {
                    "name": "featureReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/secured/store/secured.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialState,\r\n    on(fromActions.Login, (state: State) => ({\r\n        ...state\r\n    }))\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/secured/store/secured.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{}"
                }
            ],
            "src/app/reducers/app.reducer.ts": [
                {
                    "name": "getToken",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: State) => state.token"
                },
                {
                    "name": "getUserInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: State) => state.userInfo"
                },
                {
                    "name": "initialAppState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{\r\n    username: '',\r\n    password: '',\r\n    authenticationMessage: '',\r\n    userInfo: null,\r\n    token: ''\r\n}"
                },
                {
                    "name": "reducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\r\n    initialAppState as State,\r\n    on(login, (state) => ({\r\n        ...state\r\n    })),\r\n    on(loginSuccess, (state: State, {token}) => ({\r\n        ...state,\r\n        token: token\r\n    })),\r\n    on(loginFail, (state, { message }) => ({\r\n        ...state,\r\n        authenticationMessage: message\r\n    })),\r\n    on(getUserDetailsSuccess, (state: State, {userDetails}) => ({\r\n        ...state,\r\n        userInfo: userDetails\r\n    }))\r\n)"
                }
            ],
            "src/app/reducers/app.actions.ts": [
                {
                    "name": "getUserDetails",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[loginModule] get user details',\r\n    props<{token: string}>()\r\n)"
                },
                {
                    "name": "getUserDetailsSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[loginModule] get user details success',\r\n    props<{userDetails: UserDetailsModel}>()\r\n)"
                },
                {
                    "name": "login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[loginModule] log user Action',\r\n    props<{ username: string; password: string }>()\r\n)"
                },
                {
                    "name": "loginFail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[loginModule] log user Fail Action',\r\n    props<{ message: string }>()\r\n)"
                },
                {
                    "name": "loginSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/reducers/app.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\r\n    '[loginModule] log user Success Action',\r\n    props<{token: string}>()\r\n)"
                }
            ],
            "src/app/modules/public/login/store/login.store.ts": [
                {
                    "name": "INITIAL_STATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/public/login/store/login.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{\r\n    loading: false,\r\n    token: null\r\n}"
                }
            ],
            "src/app/modules/public/modules/register/store/register.store.ts": [
                {
                    "name": "INITIAL_STATE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/public/modules/register/store/register.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{\r\n\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/modules/secured/store/secured.actions.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/modules/secured/store/secured.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Login] Login')"
                }
            ],
            "src/app/core/rest/rest.module.ts": [
                {
                    "name": "PROVIDERS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/rest/rest.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[UserRestService]"
                }
            ],
            "src/app/core/utils/route-service.ts": [
                {
                    "name": "PUBLIC",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/utils/route-service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'/public'"
                },
                {
                    "name": "REGISTER",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/utils/route-service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "PUBLIC + '/register'"
                },
                {
                    "name": "SECURED",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/utils/route-service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'/secured'"
                },
                {
                    "name": "SECURED__DASHBOARD",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/utils/route-service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`${SECURED}/dashboard`"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/reducers/app.reducer.ts": [
                {
                    "name": "AppReducer",
                    "file": "src/app/reducers/app.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "State",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "State",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/validators/form.validator.ts": [
                {
                    "name": "emailValidator",
                    "file": "src/app/core/validators/form.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "ValidatorFn"
                }
            ],
            "src/app/modules/secured/store/secured.reducer.ts": [
                {
                    "name": "reducer",
                    "file": "src/app/modules/secured/store/secured.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "state",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "type": "Action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/modules/public/login/components/login-form/login-form.component.ts": [
                {
                    "name": "Login",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/modules/public/login/components/login-form/login-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "LoginFormValue",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<literal type>",
                    "file": "src/app/modules/public/login/components/login-form/login-form.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "pathMatch": "full",
                        "redirectTo": "public"
                    },
                    {
                        "path": "public",
                        "loadChildren": "./modules/public/public.module#PublicModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/modules/public/public.module.ts",
                                        "module": "PublicModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "redirectTo": "login",
                                                "pathMatch": "full"
                                            },
                                            {
                                                "path": "login",
                                                "loadChildren": "./login/login.module#LoginModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [
                                                            {
                                                                "name": "routes",
                                                                "filename": "src/app/modules/public/login/login.module.ts",
                                                                "module": "LoginModule",
                                                                "children": [
                                                                    {
                                                                        "path": "",
                                                                        "component": "LoginContainerComponent"
                                                                    }
                                                                ],
                                                                "kind": "module"
                                                            }
                                                        ],
                                                        "module": "LoginModule"
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "register",
                                                "loadChildren": "./modules/register/register.module#RegisterModule",
                                                "children": [
                                                    {
                                                        "kind": "module",
                                                        "children": [],
                                                        "module": "RegisterModule"
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "PublicModule"
                            }
                        ]
                    },
                    {
                        "path": "secured",
                        "canActivate": [
                            "LoginGuard"
                        ],
                        "loadChildren": "./modules/secured/secured.module#SecuredModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/modules/secured/secured.module.ts",
                                        "module": "SecuredModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "ContainerComponent",
                                                "children": [
                                                    {
                                                        "path": "",
                                                        "redirectTo": "dashboard",
                                                        "pathMatch": "full"
                                                    },
                                                    {
                                                        "path": "dashboard",
                                                        "loadChildren": "./modules/dashboard/dashboard.module#DashboardModule",
                                                        "children": [
                                                            {
                                                                "kind": "module",
                                                                "children": [
                                                                    {
                                                                        "name": "routes",
                                                                        "filename": "src/app/modules/secured/modules/dashboard/dashboard.module.ts",
                                                                        "module": "DashboardModule",
                                                                        "children": [
                                                                            {
                                                                                "path": "",
                                                                                "component": "DashboardContainerComponent"
                                                                            }
                                                                        ],
                                                                        "kind": "module"
                                                                    }
                                                                ],
                                                                "module": "DashboardModule"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "SecuredModule"
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "component": "NotFoundComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/guards/login.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "LoginGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/rest/login/login-rest.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserRestService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/rest/login/model/login-request.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginRequest",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/rest/login/model/login-response.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserDetailsModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/rest/rest.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PROVIDERS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/utils/route-service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PUBLIC",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/utils/route-service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "REGISTER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/utils/route-service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SECURED",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/utils/route-service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SECURED__DASHBOARD",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/validators/form.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "emailValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/login/components/login-form/login-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/login/login-container/login-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/login/store/login.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/login/store/login.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/login/store/login.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_STATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/modules/register/components/register-form/register-form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterFormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/modules/register/components/register-form/register-form.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RegisterForm",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/modules/register/container/register-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/modules/register/store/register.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RegisterStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/modules/register/store/register.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/public/modules/register/store/register.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INITIAL_STATE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/secured/container/container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/secured/modules/dashboard/dashboard-container/dashboard-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/secured/store/secured.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/secured/store/secured.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/secured/store/secured.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/secured/store/secured.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "featureReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/modules/secured/store/secured.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserDetails",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserDetailsSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "login",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginFail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "loginSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AppReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialAppState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appStateSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getToken",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getUserInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/reducers/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Base",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/input/stories/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/not-found/not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "COMPONENTS_TO_EXPORT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MODULES_TO_IMPORT",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/image-routes.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELIBRARY_LOGO",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/image-routes.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HOMEPAGE_COVER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/image-routes.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "IMAGE_ROOT_PATH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/utils/image-routes.util.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "REGISTER_COVER",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}